// !COLOR MIXINS

// takes your color variables and coverts them in to rbga for opacity and generates a ie compatible transparent //filter attribute.
// options: @include trans-bg($color, $alpha); color can be a variable

@mixin triangle($direction:'up', $color:'white', $width:100, $height:$width) {
	@if $direction == 'up' {
		width: 0; 
		height: 0; 
		border-left: #{$width}px solid transparent;
		border-right: #{$width}px solid transparent;
		
		border-bottom: #{$height}px solid $color; // determines height
	
	} @else if $direction == 'down' {
		width: 0; 
		height: 0; 
		border-left: #{$width}px solid transparent;
		border-right: #{$width}px solid transparent;
		
		border-top: #{$height}px solid $color; // determines height
		
	} @else if $direction == 'right' {
		width: 0; 
		height: 0; 
		border-top: #{$width}px solid transparent;
		border-bottom: #{$width}px solid transparent;
		
		border-left: #{$height}px solid $color; // determines height
		
	} @else if $direction == 'left' {
		width: 0; 
		height: 0; 
		border-top: #{$width}px solid transparent;
		border-bottom: #{$width}px solid transparent; 
		
		border-right: #{$height}px solid $color; // determines height
	}
	@else if $direction == 'downComm' {
		width: 0; 
		height: 0; 
		border-left: 0px solid transparent;
		border-right: #{$width}px solid transparent;
		
		border-top: #{$height}px solid $color; // determines height
	} 
}


@mixin trans-bg($color, $alpha:1) {
	$rgba: rgba($color, $alpha);
	$ie-hex-str: ie-hex-str($rgba);
	background-color: $rgba;
}

@mixin gradient-trans($start_color:darken($grey,20%),$start_alpha:0,$end_color:darken($grey,60%),$end_alpha:.5) {
	$rgba_start: rgba($start_color,$start_alpha);
	$rgba_end: rgba($end_color,$end_alpha);
	//background: -webkit-linear-gradient(top, $rgba_start 0%,$rgba_end 100%); // Chrome10+,Safari5.1+
	background: linear-gradient(to bottom, $rgba_start 0%,$rgba_end 100%); // W3C
}
@mixin gradient-trans-percent($start_color:darken($grey,20%),$start_cent:0%,$start_alpha:0,$end_color:darken($grey,60%),$end_cent:100%,$end_alpha:.5,$degree:195deg) {
	$rgba_start: rgba($start_color,$start_alpha);
	$rgba_end: rgba($end_color,$end_alpha);
	//background: -webkit-linear-gradient($degree, $rgba_start $start_cent,$rgba_end $end_cent); // Chrome10+,Safari5.1+
	background: linear-gradient($degree, $rgba_start $start_cent,$rgba_end $end_cent); // W3C
}


@mixin noselect() {
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

@mixin transitions($selector:all, $animation:ease-out, $duration:0.2s, $delay:0s) {
	-webkit-transition:$selector $animation $duration;
	transition:$selector $animation $duration;
}

@mixin outer-glow($size:10,$spread:0,$blackn:.4) {
	box-shadow: 0px 0px #{$size}px #{$spread}px rgba(0, 0, 0, $blackn);
}

@mixin box-shadow($x:0,$y:5,$blur:10,$color:#000) {
	box-shadow: #{$x}px #{$y}px #{$blur}px $color;
}

@mixin b-shadow-inset($x:0,$y:-1px,$blur:1,$color:rgba(0,0,0,0.5)) {
	box-shadow: inset $x $y $blur $color;
}

@mixin inset_box_shadow($shadow_x:3px, $shadow_y:3px, $shadow_rad:3px, $shadow_in:3px, $shadow_color:#888) {
	box-shadow:inset $shadow_x $shadow_y $shadow_rad $shadow_in $shadow_color;
}

@mixin b-shadow-inset-left-right () {
	box-shadow: inset 10px 0 10px -4px rgba(0, 0, 0, 0.1), 
				inset -10px 0 10px -4px rgba(0, 0, 0, 0.1);
}

@mixin bevel($size:1,$strength:.3,$reverse:false) {
	$x: 0; 
	$y: $size; 
	$blur: 0;
	@if $reverse == false {
		box-shadow: inset $x #{-$y}px $blur rgba(0,0,0,$strength), 
					inset $x #{$y}px $blur rgba(255,255,255,$strength*2);
		
		border-left: 1px solid rgba(255,255,255,$strength*2);
		border-right: 1px solid rgba(0,0,0,$strength);
		
	}
	@else {
		box-shadow: inset $x #{-$y}px $blur rgba(255,255,255,$strength*2), 
							inset $x #{$y}px $blur rgba(0,0,0,$strength);
							
		border-right: 1px solid rgba(255,255,255,$strength*2);
		border-left: 1px solid rgba(0,0,0,$strength);

	}
}

@mixin gradient($start_color,$end_color) {
	//background: -webkit-linear-gradient(top, $start_color 0%,$end_color 100%); // Chrome10+,Safari5.1+
	background: linear-gradient(to bottom, $start_color 0%,$end_color 100%); // W3C
}

@mixin border-radius($tl:3px,$tr:3px,$br:3px,$bl:3px) {
	border-radius: $tl $tr $br $bl;
}

@mixin multi-col-text($col,$gap) {
	-moz-column-count: $col;
	-moz-column-gap: $gap;
	-webkit-column-count: $col;
	-webkit-column-gap: $gap;
	column-count: $col;
	column-gap: $gap;
}

@mixin grayscale($amount) {
	@if $amount == 100 {
		-webkit-filter:grayscale(100%);
		   -moz-filter:grayscale(100%);
			 -o-filter:grayscale(100%);
				filter:grayscale(100%);
	}
	@else if $amount == 0 {
		-webkit-filter:grayscale(0%);
		   -moz-filter:grayscale(0%);
			 -o-filter:grayscale(0%);
				filter:grayscale(0%);
				filter: none;
	}
}

@mixin box-sizing($type:border-box) {
	box-sizing: $type;
}


@mixin opacity($opacity:.5) {
	zoom: 1;
	filter: alpha(opacity=$opacity*100);
	opacity: $opacity;
}


$b-radius-default: 5px; //Default value

@mixin border-radius($b-radius:$b-radius-default) {
	border-radius:$b-radius $b-radius $b-radius $b-radius;
}

@mixin border-top-radius($b-radius:$b-radius-default) {
	border-top-right-radius:$b-radius;
	border-top-left-radius:$b-radius;
}

@mixin border-bottom-radius($b-radius:$b-radius-default) {
	border-bottom-right-radius:$b-radius;
	border-bottom-left-radius:$b-radius;
}

@mixin border-left-radius($b-radius:$b-radius-default) {
	border-bottom-left-radius:$b-radius;
	border-top-left-radius:$b-radius;
}

@mixin border-right-radius($b-radius:$b-radius-default) {
	border-top-right-radius:$b-radius;
	border-bottom-right-radius:$b-radius;
}


@mixin border-top-left-radius($b-radius:$b-radius-default) {
	border-top-left-radius:$b-radius;
}

@mixin border-bottom-left-radius($b-radius:$b-radius-default) {
	border-bottom-left-radius:$b-radius;
}

@mixin border-top-right-radius($b-radius:$b-radius-default) {
	border-top-right-radius:$b-radius;
}

@mixin border-bottom-right-radius($b-radius:$b-radius-default) {
	border-bottom-right-radius:$b-radius;
}

@mixin darkorlighttextshadow( $a, $opacity: 0.8 ) {
	@if lightness( $a ) >= 65% {
		@include text_shadow( 0, -1px, 0, rgba(0, 0, 0, $opacity) );
	} @else {
		@include text_shadow( 0, 1px, 0, rgba(255, 255, 255, $opacity) );
	}
}

@mixin text_shadow($shadow_x:3px, $shadow_y:3px, $shadow_rad:3px, $shadow_color:#fff) {
	text-shadow:$shadow_x $shadow_y $shadow_rad $shadow_color;
}

@mixin vertical_gradient($from: #000, $to: #FFF) {
	background: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background: -webkit-linear-gradient($from, $to);
	background: -moz-linear-gradient(center top, $from 0%, $to 100%);
	background: -moz-gradient(center top, $from 0%, $to 100%);
}
@mixin radial_gradient($inner-color: #000, $outer-color: #FFF) {
	background: -webkit-radial-gradient(center, ellipse cover, $inner-color 0%,$outer-color 100%); // Chrome10+,Safari5.1+
	background: radial-gradient(ellipse at center, $inner-color 0%,$outer-color 100%); // W3C
}

@mixin mxAnim($time:100ms, $type:background, $ease:ease-out){
	-webkit-transition: $type $time $ease;
	transition: $type $time $ease;
}//mxAnim